{"version":3,"sources":["components/buttons.js","components/timer.js","components/progressTime.js","components/startTime.js","components/countdown.js","components/tabs.js","index.js"],"names":["Buttons","buttonRender","icon","text","onFn","Icon","onClick","type","shape","size","viewButton","isStartButton","props","stopButton","startButton","CaretRightOutlined","PauseOutlined","this","view","clearButton","offset","RedoOutlined","React","Component","Timer","state","setState","clearInterval","timerID","setInterval","tick","timeCount","count","min","Math","trunc","sec","ms","span","ProgressTime","value","timeStart","progressPercent","strokeColor","percent","StartTime","onChangeMin2","onChangeMin","onChangeSec2","onChangeSec","timeInputDisable","max","onChange","step","style","margin","disabled","CountdownApp","startCount","isNaN","progressTime","TabPane","Tabs","Tab","tab","key","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ead0d44d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Row, Col, Button, Space,\n} from 'antd';\nimport { RedoOutlined, CaretRightOutlined, PauseOutlined } from '@ant-design/icons';\n\n\nexport default class Buttons extends React.Component {\n    buttonRender = (icon, text, onFn) => {\n      const Icon = icon;\n      return (\n        <Button\n          onClick={onFn}\n          type=\"primary\"\n          shape=\"round\"\n          icon={<Icon />}\n          size=\"large\"\n        >\n          {text}\n        </Button>\n      );\n    }\n\n    viewButton = (isStartButton) => {\n      const { stopButton, startButton } = this.props;\n      if (isStartButton === true) {\n        return this.buttonRender(CaretRightOutlined, 'Start', startButton);\n      }\n      return this.buttonRender(PauseOutlined, 'Stop', stopButton);\n    }\n\n    render() {\n      const { view } = this.props;\n      const { isStartButton } = view;\n      const { clearButton } = this.props;\n\n      return (\n        <Row>\n          <Col offset={0.5}>\n            <Space>\n              {this.viewButton(isStartButton)}\n              {this.buttonRender(RedoOutlined, 'Clear', clearButton)}\n            </Space>\n          </Col>\n        </Row>\n      );\n    }\n}\n\nButtons.propTypes = {\n  view: PropTypes.object,\n  clearButton: PropTypes.func,\n  stopButton: PropTypes.func,\n  startButton: PropTypes.func,\n};\n","import React from 'react';\nimport { Row, Col } from 'antd';\nimport Buttons from './buttons';\n\nexport default class Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      timeCount: 0,\n      size: 'large',\n      isStartButton: true,\n    };\n  }\n\n    startButton = () => {\n      const { isStartButton } = this.state;\n      this.setState({\n        isStartButton: !isStartButton,\n      });\n\n      if (isStartButton === false) {\n        clearInterval(this.timerID);\n      }\n\n      if (isStartButton === true) {\n        this.timerID = setInterval(\n          () => this.tick(),\n          10,\n        );\n      }\n    }\n\n    clearButton = () => {\n      clearInterval(this.timerID);\n      this.setState({\n        isStartButton: true,\n        timeCount: 0,\n      });\n    }\n\n    tick = () => {\n      const { timeCount } = this.state;\n      const count = timeCount + 1;\n      this.setState({ timeCount: count });\n    }\n\n    count = () => {\n      const { timeCount } = this.state;\n      const min = Math.trunc(timeCount / 6000);\n      const sec = Math.trunc(timeCount / 100);\n      const ms = timeCount % 100;\n      return <div>{`min: ${min}  sec: ${sec}  ms: ${ms}`}</div>;\n    }\n\n    render() {\n      return (\n        <>\n          <br />\n          <Row>\n            <Col span={12} offset={6}>\n              {this.count()}\n            </Col>\n          </Row>\n          <br />\n          <Row>\n            <Col span={12} offset={5}>\n              <Buttons\n                view={this.state}\n                startButton={this.startButton}\n                stopButton={this.startButton}\n                clearButton={this.clearButton}\n              />\n            </Col>\n          </Row>\n        </>\n      );\n    }\n}\n","import React from 'react';\n\nimport { Progress } from 'antd';\n\nexport default class ProgressTime extends React.Component {\n    count = () => {\n      const { value } = this.props;\n      const { timeCount } = value;\n      const min = Math.trunc(timeCount / 60);\n      const sec = timeCount % 60;\n      return (<div>{`осталось ${min} : ${sec}`}</div>);\n    }\n\n    render() {\n      const { value: { timeStart, timeCount } } = this.props;\n      if (timeStart === 0) { return null; }\n      const progressPercent = 100 - Math.trunc((timeCount / timeStart) * 100);\n      return (\n        < >\n          {this.count()}\n          <br />\n          <Progress\n            type=\"circle\"\n            strokeColor={{\n              '0%': '#108ee9',\n              '100%': '#87d068',\n            }}\n            percent={progressPercent}\n          />\n        </>\n      );\n    }\n}\nProgressTime.propTypes = {\n\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Row, Col, Slider, InputNumber,\n} from 'antd';\n\n\nexport default class StartTime extends React.Component {\n    onChangeMin2 = (value) => {\n      const { onChangeMin } = this.props;\n      onChangeMin(value);\n    };\n\n    onChangeSec2 = (value) => {\n      const { onChangeSec } = this.props;\n      onChangeSec(value);\n    };\n\n    render() {\n      const { min, sec, timeInputDisable } = this.props.value;\n      return (\n        <>\n          <Row>\n            <Col span={20}>\n              <Slider\n                min={0}\n                max={720}\n                onChange={this.onChangeMin2}\n                step={15}\n                value={typeof min === 'number' ? min : 0}\n              />\n            </Col>\n            <Col span={4}>\n              <InputNumber\n                min={0}\n                max={720}\n                step={1}\n                style={{ margin: '0 16px' }}\n                value={min}\n                onChange={this.onChangeMin2}\n                disabled={timeInputDisable}\n              />\n            </Col>\n          </Row>\n          <br />\n          <Row>\n            <Col span={20}>\n              <Slider\n                min={0}\n                max={60}\n                onChange={this.onChangeSec2}\n                value={typeof sec === 'number' ? sec : 0}\n                step={15}\n              />\n            </Col>\n            <Col span={4}>\n              <InputNumber\n                min={0}\n                max={60}\n                style={{ margin: '0 16px' }}\n                step={1}\n                value={sec}\n                onChange={this.onChangeSec2}\n                disabled={timeInputDisable}\n              />\n            </Col>\n          </Row>\n        </>\n      );\n    }\n}\n\nStartTime.propTypes = {\n  value: PropTypes.object,\n  onChangeSec: PropTypes.func,\n  onChangeMin: PropTypes.func,\n};\n","import React from 'react';\nimport { Row, Col } from 'antd';\nimport Buttons from './buttons';\nimport ProgressTime from './progressTime';\nimport StartTime from './startTime';\n\nexport default class CountdownApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      min: 0,\n      sec: 0,\n      timeCount: 0,\n      timeStart: 0,\n      isStartButton: true,\n      timeInputDisable: false,\n    };\n  }\n\n\n    startButton = () => {\n      const {\n        isStartButton, min, sec, timeCount, timeInputDisable,\n      } = this.state;\n      const startCount = min * 60 + sec;\n\n      if (timeCount === 0) {\n        this.setState({\n          timeCount: startCount,\n          timeStart: startCount,\n        });\n      }\n\n      if (min === 0 && sec === 0 && timeInputDisable === false) { return; }\n\n      this.setState({\n        isStartButton: !isStartButton,\n        timeInputDisable: true,\n        min: 0,\n        sec: 0,\n      });\n\n      this.timerID = setInterval(\n        () => this.tick(),\n        1000,\n      );\n    }\n\n    stopButton = () => {\n      const { isStartButton } = this.state;\n      this.setState({\n        isStartButton: !isStartButton,\n      });\n      clearInterval(this.timerID);\n    }\n\n    clearButton = () => {\n      clearInterval(this.timerID);\n      this.setState({\n        isStartButton: true,\n        timeInputDisable: false,\n        timeCount: 0,\n        timeStart: 0,\n      });\n    }\n\n    onChangeMin = (value) => {\n      if (isNaN(value)) {\n        return;\n      }\n      this.setState({\n        min: value,\n      });\n    };\n\n    onChangeSec = (value) => {\n      if (isNaN(value)) {\n        return;\n      }\n      this.setState({\n        sec: value,\n      });\n    };\n\n    tick = () => {\n      const { timeCount } = this.state;\n      if (timeCount === 0) {\n        this.setState({\n          progressTime: 100,\n        });\n        clearInterval(this.timerID);\n        return;\n      }\n\n      const count = timeCount - 1;\n      this.setState({\n        timeCount: count,\n      });\n    }\n\n    render() {\n      return (\n        <>\n          <Row>\n            <Col offset={1} span={8}>\n              <StartTime\n                onChangeMin={this.onChangeMin}\n                onChangeSec={this.onChangeSec}\n                value={this.state}\n              />\n            </Col>\n          </Row>\n          <br />\n          <br />\n          <Row>\n            <Col offset={3}>\n              <Buttons\n                view={this.state}\n                startButton={this.startButton}\n                stopButton={this.stopButton}\n                clearButton={this.clearButton}\n              />\n            </Col>\n          </Row>\n          <br />\n          <br />\n          <Row>\n            <Col offset={4}>\n              <ProgressTime\n                value={this.state}\n              />\n            </Col>\n          </Row>\n        </>\n      );\n    }\n}\n","import React from 'react';\nimport { Tabs } from 'antd';\nimport Timer from './timer';\nimport Countdown from './countdown';\n\nconst { TabPane } = Tabs;\n\nexport default class Tab extends React.Component {\n  render() {\n    return (\n      <Tabs type=\"card\">\n        <TabPane tab=\"Timer\" key=\"1\"><Timer /></TabPane>\n        <TabPane tab=\"Countdown\" key=\"2\"><Countdown /></TabPane>\n      </Tabs>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Tab from './components/tabs';\nimport 'antd/dist/antd.css';\n\n\nconst App = () => <Tab />;\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}