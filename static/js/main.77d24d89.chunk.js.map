{"version":3,"sources":["components/button.js","components/timer.js","components/progressTime.js","components/inputTime.js","components/countdown.js","components/tabs.js","index.js","sound.mp3"],"names":["Buttons","this","props","isDisplay","onClickFunc","icon","text","onClick","type","shape","size","React","Component","defaultProps","initialState","timeStart","timeCount","isStartButton","Timer","startTimer","state","setState","clearInterval","timerID","Date","now","newTimeStart","setInterval","tick","clearTimer","count","timeСounter","min","Math","trunc","sec","ms","span","offset","CaretRightOutlined","PauseOutlined","RedoOutlined","ProgressTime","value","onSound","percent","src","sound","autoPlay","progressPercent","strokeColor","InputTime","handleChangeMin","onChangeMin","handleChangeSec","onChangeSec","handleChangeSlider","onChangeSlider","timeInputDisable","timePrev","max","onChange","step","style","margin","disabled","CountdownApp","stopTimer","isNaN","setTimePrev","progressTime","TabPane","Tabs","Tab","tab","key","App","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.77d24d89.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Button } from 'antd';\n\n\n\nexport default class Buttons extends React.Component {\n\n  render() {\n    const { isDisplay, onClickFunc, icon, text } = this.props;\n    if (isDisplay === false) { return null; }\n\n    return (\n      <Button\n        onClick={onClickFunc}\n        type=\"primary\"\n        shape=\"round\"\n        icon={icon}\n        size=\"large\"\n      >\n        {text}\n      </Button>\n    );\n  }\n}\n\nButtons.propTypes = {\n  isDisplay: PropTypes.bool,\n  onClickFunc: PropTypes.func,\n  text: PropTypes.string,\n  icon: PropTypes.element,\n};\n\nButtons.defaultProps = {\n  isDisplay: true,\n  onClickFunc: null,\n  text: \"Button\",\n  icon: null,\n};\n","import React from 'react';\nimport { Row, Col } from 'antd';\nimport Button from './button';\nimport { RedoOutlined, CaretRightOutlined, PauseOutlined } from '@ant-design/icons';\n\n\nconst initialState = {\n  timeStart: 0,\n  timeCount: 0,\n  isStartButton: true,\n};\nexport default class Timer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n  }\n\n  startTimer = () => {\n    const { isStartButton, timeCount } = this.state;\n    this.setState({\n      isStartButton: !isStartButton,\n    });\n\n    if (isStartButton === false) {\n      clearInterval(this.timerID);\n    }\n\n    if (isStartButton === true) {\n      if (timeCount === 0) {\n        this.setState({\n          timeStart: Date.now(),\n        })\n      }\n      if (timeCount > 0) {\n        const newTimeStart = Date.now() - timeCount;\n        this.setState({\n          timeStart: newTimeStart,\n        })\n      }\n\n      this.timerID = setInterval(\n        () => this.tick(),\n        80,\n      );\n    }\n  }\n\n  clearTimer = () => {\n    clearInterval(this.timerID);\n    this.setState(initialState);\n  }\n\n  tick = () => {\n    const { timeStart } = this.state;\n    const count = Date.now() - timeStart;\n    this.setState({ timeCount: count });\n  }\n\n  timeСounter = () => {\n    const { timeCount } = this.state;\n    const min = Math.trunc(timeCount / 60000);\n    const sec = Math.trunc(timeCount / 1000);\n    const ms = Math.trunc((timeCount % 1000) / 10);\n    return <div>{`min: ${min}  sec: ${sec}  ms: ${ms}`}</div>;\n  }\n\n  render() {\n    const { isStartButton } = this.state;\n    return (\n      <>\n        <br />\n        <Row>\n          <Col span={12} offset={1}>\n            {this.timeСounter()}\n          </Col>\n        </Row>\n        <br />\n        <Row>\n          <Col span={12} offset={1}>\n            <Button isDisplay={isStartButton} onClickFunc={this.startTimer} icon={<CaretRightOutlined />} text={'Start'} />\n            <Button isDisplay={!isStartButton} onClickFunc={this.startTimer} icon={<PauseOutlined />} text={'Stop'} />\n            <Button isDisplay onClickFunc={this.clearTimer} icon={<RedoOutlined />} text={'Clear'} />\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Progress } from 'antd';\nimport sound from '../sound.mp3';\nexport default class ProgressTime extends React.Component {\n  count = () => {\n    const { value: { timeCount } } = this.props;\n    const min = Math.trunc(timeCount / 60);\n    const sec = timeCount % 60;\n    return (<div>{`осталось ${min} : ${sec}`}</div>);\n  }\n\n  onSound = (percent) => {\n    if (percent < 100) {\n      return null;\n    }\n\n    const autoplay = true;\n    return <audio src={sound} autoPlay={autoplay} type={\"audio/mpeg\"} />;\n  }\n\n  render() {\n    const { value: { timeStart, timeCount } } = this.props;\n    if (timeStart === 0) { return null; }\n    const progressPercent = 100 - Math.trunc((timeCount / timeStart) * 100);\n    return (\n      < >\n        {this.count()}\n        <br />\n        <Progress\n          type=\"circle\"\n          strokeColor={{\n            '0%': '#108ee9',\n            '100%': '#87d068',\n          }}\n          percent={progressPercent}\n        />\n        {this.onSound(progressPercent)}\n      </>\n    );\n  }\n}\nProgressTime.propTypes = {\n  value: PropTypes.object,\n};\nProgressTime.defaultProps = {\n  value: { timeStart: 0, timeCount: 0 },\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Row, Col, Slider, InputNumber,\n} from 'antd';\nexport default class InputTime extends React.Component {\n  handleChangeMin = (value) => {\n    const { onChangeMin } = this.props;\n    onChangeMin(value);\n  };\n\n  handleChangeSec = (value) => {\n    const { onChangeSec } = this.props;\n    onChangeSec(value);\n  };\n\n  handleChangeSlider = (value) => {\n    const { onChangeSlider } = this.props;\n    onChangeSlider(value);\n  };\n\n  render() {\n    const { value: { timeInputDisable, timePrev } } = this.props;\n    const sec = timePrev % 60;\n    const min = Math.trunc(timePrev / 60);\n\n    return (\n      <>\n        <Row>\n          <Col span={20}>\n            <Slider\n              min={0}\n              max={3600}\n              onChange={this.handleChangeSlider}\n              step={15}\n              value={typeof timePrev === 'number' ? timePrev : 0}\n            />\n          </Col>\n          <br />\n          <br />\n          <br />\n          <Col span={24}>\n            <InputNumber\n              min={0}\n              max={720}\n              step={1}\n              style={{ margin: '0 16px' }}\n              value={min}\n              onChange={this.handleChangeMin}\n              disabled={timeInputDisable}\n            />\n            <InputNumber\n              min={0}\n              max={60}\n              style={{ margin: '0 16px' }}\n              step={1}\n              value={sec}\n              onChange={this.handleChangeSec}\n              disabled={timeInputDisable}\n            />\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n\nInputTime.propTypes = {\n  value: PropTypes.object,\n  onChangeSec: PropTypes.func,\n  onChangeMin: PropTypes.func,\n  onChangeSlider: PropTypes.func,\n};\n\n\nInputTime.defaultProps = {\n  value: { timeInputDisable: false, timePrev: 0 },\n  onChangeSec: null,\n  onChangeMin: null,\n  onChangeSlider: null,\n};\n","import React from 'react';\nimport { Row, Col } from 'antd';\n\nimport { RedoOutlined, CaretRightOutlined, PauseOutlined } from '@ant-design/icons';\nimport Button from './button';\nimport ProgressTime from './progressTime';\nimport InputTime from './inputTime';\n\nconst initialState = {\n  timePrev: 0,\n  timeCount: 0,\n  timeStart: 0,\n  isStartButton: true,\n  timeInputDisable: false,\n};\nexport default class CountdownApp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = initialState;\n  }\n\n  startTimer = () => {\n    const {\n      isStartButton, timePrev, timeCount, timeInputDisable,\n    } = this.state;\n\n\n    if (timeCount === 0) {\n      this.setState({\n        timeCount: timePrev,\n        timeStart: timePrev,\n      });\n    }\n\n    if (timePrev === 0 && timeInputDisable === false) { return; }\n\n    this.setState({\n      isStartButton: !isStartButton,\n      timeInputDisable: true,\n      timePrev: 0,\n    });\n\n    this.timerID = setInterval(\n      () => this.tick(),\n      1000,\n    );\n  }\n\n  stopTimer = () => {\n    const { isStartButton } = this.state;\n    this.setState({\n      isStartButton: !isStartButton,\n    });\n    clearInterval(this.timerID);\n  }\n\n  clearTimer = () => {\n    clearInterval(this.timerID);\n    this.setState(initialState);\n  }\n\n  onChangeSlider = (value) => {\n    this.setState({\n      timePrev: value,\n    })\n  }\n\n  onChangeMin = (value) => {\n    if (isNaN(value)) {\n      return;\n    }\n    const { timePrev } = this.state;\n    const setTimePrev = timePrev + (value - Math.trunc(timePrev / 60)) * 60;\n\n    this.setState({\n      timePrev: setTimePrev,\n    });\n  };\n\n  onChangeSec = (value) => {\n    if (isNaN(value)) {\n      return;\n    }\n    const { timePrev } = this.state;\n    const setTimePrev = timePrev + (value - (timePrev % 60));\n    this.setState({\n      timePrev: setTimePrev,\n    });\n  };\n\n  tick = () => {\n    const { timeCount } = this.state;\n    if (timeCount === 0) {\n      this.setState({\n        progressTime: 100,\n        timeInputDisable: false,\n        isStartButton: true,\n      });\n      clearInterval(this.timerID);\n      return;\n    }\n\n    const count = timeCount - 1;\n    this.setState({\n      timeCount: count,\n    });\n  }\n\n  render() {\n    const { isStartButton } = this.state;\n    return (\n      <>\n        <Row>\n          <Col offset={1} span={8}>\n            <InputTime\n              onChangeMin={this.onChangeMin}\n              onChangeSec={this.onChangeSec}\n              onChangeSlider={this.onChangeSlider}\n              value={this.state}\n            />\n          </Col>\n        </Row>\n        <br />\n        <br />\n        <Row>\n          <Col offset={2}>\n            <Button isDisplay={isStartButton} onClickFunc={this.startTimer} icon={<CaretRightOutlined />} text={'Start'} />\n            <Button isDisplay={!isStartButton} onClickFunc={this.stopTimer} icon={<PauseOutlined />} text={'Stop'} />\n            <Button isDisplay onClickFunc={this.clearTimer} icon={<RedoOutlined />} text={'Clear'} />\n          </Col>\n        </Row>\n        <br />\n        <br />\n        <Row>\n          <Col offset={4}>\n            <ProgressTime\n              value={this.state}\n            />\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport { Tabs } from 'antd';\nimport Timer from './timer';\nimport Countdown from './countdown';\n\nconst { TabPane } = Tabs;\n\nexport default class Tab extends React.Component {\n  render() {\n    return (\n      <Tabs type=\"card\">\n        <TabPane tab=\"Timer\" key=\"1\"><Timer /></TabPane>\n        <TabPane tab=\"Countdown\" key=\"2\"><Countdown /></TabPane>\n      </Tabs>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Tab from './components/tabs';\nimport 'antd/dist/antd.css';\n\n\nconst App = () => <Tab />;\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/sound.0faed3a1.mp3\";"],"sourceRoot":""}