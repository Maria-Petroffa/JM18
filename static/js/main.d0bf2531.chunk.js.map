{"version":3,"sources":["components/buttons.js","components/timer.js","components/progressTime.js","components/startTime.js","components/countdown.js","components/tabs.js","index.js"],"names":["Buttons","buttonRender","icon","text","onFn","Icon","onClick","type","shape","size","viewButton","isStartButton","props","stopButton","startButton","CaretRightOutlined","PauseOutlined","this","view","clearButton","offset","RedoOutlined","React","Component","Timer","state","setState","clearInterval","timerID","setInterval","tick","timeCount","count","min","Math","trunc","sec","ms","span","ProgressTime","value","timeStart","progressPercent","strokeColor","percent","StartTime","onChangeMin2","onChangeMin","onChangeSec2","onChangeSec","timeInputDisable","max","onChange","step","style","margin","disabled","CountdownApp","startCount","isNaN","progressTime","TabPane","Tabs","Tab","tab","key","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d0bf2531.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {\r\n  Row, Col, Button, Space,\r\n} from 'antd';\r\nimport { RedoOutlined, CaretRightOutlined, PauseOutlined } from '@ant-design/icons';\r\n\r\n\r\nexport default class Buttons extends React.Component {\r\n    buttonRender = (icon, text, onFn) => {\r\n      const Icon = icon;\r\n      return (\r\n        <Button\r\n          onClick={onFn}\r\n          type=\"primary\"\r\n          shape=\"round\"\r\n          icon={<Icon />}\r\n          size=\"large\"\r\n        >\r\n          {text}\r\n        </Button>\r\n      );\r\n    }\r\n\r\n    viewButton = (isStartButton) => {\r\n      const { stopButton, startButton } = this.props;\r\n      if (isStartButton === true) {\r\n        return this.buttonRender(CaretRightOutlined, 'Start', startButton);\r\n      }\r\n      return this.buttonRender(PauseOutlined, 'Stop', stopButton);\r\n    }\r\n\r\n    render() {\r\n      const { view } = this.props;\r\n      const { isStartButton } = view;\r\n      const { clearButton } = this.props;\r\n\r\n      return (\r\n        <Row>\r\n          <Col offset={0.5}>\r\n            <Space>\r\n              {this.viewButton(isStartButton)}\r\n              {this.buttonRender(RedoOutlined, 'Clear', clearButton)}\r\n            </Space>\r\n          </Col>\r\n        </Row>\r\n      );\r\n    }\r\n}\r\n\r\nButtons.propTypes = {\r\n  view: PropTypes.object,\r\n  clearButton: PropTypes.func,\r\n  stopButton: PropTypes.func,\r\n  startButton: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport { Row, Col } from 'antd';\r\nimport Buttons from './buttons';\r\n\r\nexport default class Timer extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      timeCount: 0,\r\n      size: 'large',\r\n      isStartButton: true,\r\n    };\r\n  }\r\n\r\n    startButton = () => {\r\n      const { isStartButton } = this.state;\r\n      this.setState({\r\n        isStartButton: !isStartButton,\r\n      });\r\n\r\n      if (isStartButton === false) {\r\n        clearInterval(this.timerID);\r\n      }\r\n\r\n      if (isStartButton === true) {\r\n        this.timerID = setInterval(\r\n          () => this.tick(),\r\n          10,\r\n        );\r\n      }\r\n    }\r\n\r\n    clearButton = () => {\r\n      clearInterval(this.timerID);\r\n      this.setState({\r\n        isStartButton: true,\r\n        timeCount: 0,\r\n      });\r\n    }\r\n\r\n    tick = () => {\r\n      const { timeCount } = this.state;\r\n      const count = timeCount + 1;\r\n      this.setState({ timeCount: count });\r\n    }\r\n\r\n    count = () => {\r\n      const { timeCount } = this.state;\r\n      const min = Math.trunc(timeCount / 6000);\r\n      const sec = Math.trunc(timeCount / 100);\r\n      const ms = timeCount % 100;\r\n      return <div>{`min: ${min}  sec: ${sec}  ms: ${ms}`}</div>;\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <>\r\n          <br />\r\n          <Row>\r\n            <Col span={12} offset={1}>\r\n              {this.count()}\r\n            </Col>\r\n          </Row>\r\n          <br />\r\n          <Row>\r\n            <Col span={12} offset={1}>\r\n              <Buttons\r\n                view={this.state}\r\n                startButton={this.startButton}\r\n                stopButton={this.startButton}\r\n                clearButton={this.clearButton}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      );\r\n    }\r\n}\r\n","import React from 'react';\r\n\r\nimport { Progress } from 'antd';\r\n\r\nexport default class ProgressTime extends React.Component {\r\n    count = () => {\r\n      const { value } = this.props;\r\n      const { timeCount } = value;\r\n      const min = Math.trunc(timeCount / 60);\r\n      const sec = timeCount % 60;\r\n      return (<div>{`осталось ${min} : ${sec}`}</div>);\r\n    }\r\n\r\n    render() {\r\n      const { value: { timeStart, timeCount } } = this.props;\r\n      if (timeStart === 0) { return null; }\r\n      const progressPercent = 100 - Math.trunc((timeCount / timeStart) * 100);\r\n      return (\r\n        < >\r\n          {this.count()}\r\n          <br />\r\n          <Progress\r\n            type=\"circle\"\r\n            strokeColor={{\r\n              '0%': '#108ee9',\r\n              '100%': '#87d068',\r\n            }}\r\n            percent={progressPercent}\r\n          />\r\n        </>\r\n      );\r\n    }\r\n}\r\nProgressTime.propTypes = {\r\n\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Row, Col, Slider, InputNumber,\r\n} from 'antd';\r\n\r\n\r\nexport default class StartTime extends React.Component {\r\n    onChangeMin2 = (value) => {\r\n      const { onChangeMin } = this.props;\r\n      onChangeMin(value);\r\n    };\r\n\r\n    onChangeSec2 = (value) => {\r\n      const { onChangeSec } = this.props;\r\n      onChangeSec(value);\r\n    };\r\n\r\n    render() {\r\n      const { min, sec, timeInputDisable } = this.props.value;\r\n      return (\r\n        <>\r\n          <Row>\r\n            <Col span={20}>\r\n              <Slider\r\n                min={0}\r\n                max={720}\r\n                onChange={this.onChangeMin2}\r\n                step={15}\r\n                value={typeof min === 'number' ? min : 0}\r\n              />\r\n            </Col>\r\n            <Col span={4}>\r\n              <InputNumber\r\n                min={0}\r\n                max={720}\r\n                step={1}\r\n                style={{ margin: '0 16px' }}\r\n                value={min}\r\n                onChange={this.onChangeMin2}\r\n                disabled={timeInputDisable}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <br />\r\n          <Row>\r\n            <Col span={20}>\r\n              <Slider\r\n                min={0}\r\n                max={60}\r\n                onChange={this.onChangeSec2}\r\n                value={typeof sec === 'number' ? sec : 0}\r\n                step={15}\r\n              />\r\n            </Col>\r\n            <Col span={4}>\r\n              <InputNumber\r\n                min={0}\r\n                max={60}\r\n                style={{ margin: '0 16px' }}\r\n                step={1}\r\n                value={sec}\r\n                onChange={this.onChangeSec2}\r\n                disabled={timeInputDisable}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      );\r\n    }\r\n}\r\n\r\nStartTime.propTypes = {\r\n  value: PropTypes.object,\r\n  onChangeSec: PropTypes.func,\r\n  onChangeMin: PropTypes.func,\r\n};\r\n","import React from 'react';\r\nimport { Row, Col } from 'antd';\r\nimport Buttons from './buttons';\r\nimport ProgressTime from './progressTime';\r\nimport StartTime from './startTime';\r\n\r\nexport default class CountdownApp extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      min: 0,\r\n      sec: 0,\r\n      timeCount: 0,\r\n      timeStart: 0,\r\n      isStartButton: true,\r\n      timeInputDisable: false,\r\n    };\r\n  }\r\n\r\n\r\n    startButton = () => {\r\n      const {\r\n        isStartButton, min, sec, timeCount, timeInputDisable,\r\n      } = this.state;\r\n      const startCount = min * 60 + sec;\r\n\r\n      if (timeCount === 0) {\r\n        this.setState({\r\n          timeCount: startCount,\r\n          timeStart: startCount,\r\n        });\r\n      }\r\n\r\n      if (min === 0 && sec === 0 && timeInputDisable === false) { return; }\r\n\r\n      this.setState({\r\n        isStartButton: !isStartButton,\r\n        timeInputDisable: true,\r\n        min: 0,\r\n        sec: 0,\r\n      });\r\n\r\n      this.timerID = setInterval(\r\n        () => this.tick(),\r\n        1000,\r\n      );\r\n    }\r\n\r\n    stopButton = () => {\r\n      const { isStartButton } = this.state;\r\n      this.setState({\r\n        isStartButton: !isStartButton,\r\n      });\r\n      clearInterval(this.timerID);\r\n    }\r\n\r\n    clearButton = () => {\r\n      clearInterval(this.timerID);\r\n      this.setState({\r\n        isStartButton: true,\r\n        timeInputDisable: false,\r\n        timeCount: 0,\r\n        timeStart: 0,\r\n      });\r\n    }\r\n\r\n    onChangeMin = (value) => {\r\n      if (isNaN(value)) {\r\n        return;\r\n      }\r\n      this.setState({\r\n        min: value,\r\n      });\r\n    };\r\n\r\n    onChangeSec = (value) => {\r\n      if (isNaN(value)) {\r\n        return;\r\n      }\r\n      this.setState({\r\n        sec: value,\r\n      });\r\n    };\r\n\r\n    tick = () => {\r\n      const { timeCount } = this.state;\r\n      if (timeCount === 0) {\r\n        this.setState({\r\n          progressTime: 100,\r\n        });\r\n        clearInterval(this.timerID);\r\n        return;\r\n      }\r\n\r\n      const count = timeCount - 1;\r\n      this.setState({\r\n        timeCount: count,\r\n      });\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <>\r\n          <Row>\r\n            <Col offset={1} span={8}>\r\n              <StartTime\r\n                onChangeMin={this.onChangeMin}\r\n                onChangeSec={this.onChangeSec}\r\n                value={this.state}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <br />\r\n          <br />\r\n          <Row>\r\n            <Col offset={3}>\r\n              <Buttons\r\n                view={this.state}\r\n                startButton={this.startButton}\r\n                stopButton={this.stopButton}\r\n                clearButton={this.clearButton}\r\n              />\r\n            </Col>\r\n          </Row>\r\n          <br />\r\n          <br />\r\n          <Row>\r\n            <Col offset={4}>\r\n              <ProgressTime\r\n                value={this.state}\r\n              />\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      );\r\n    }\r\n}\r\n","import React from 'react';\nimport { Tabs } from 'antd';\nimport Timer from './timer';\nimport Countdown from './countdown';\n\nconst { TabPane } = Tabs;\n\nexport default class Tab extends React.Component {\n  render() {\n    return (\n      <Tabs type=\"card\">\n        <TabPane tab=\"Timer\" key=\"1\"><Timer /></TabPane>\n        <TabPane tab=\"Countdown\" key=\"2\"><Countdown /></TabPane>\n      </Tabs>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Tab from './components/tabs';\nimport 'antd/dist/antd.css';\n\n\nconst App = () => <Tab />;\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}